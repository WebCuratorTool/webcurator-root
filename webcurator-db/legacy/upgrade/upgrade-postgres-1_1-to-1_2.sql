

-- Alter the lengths of the description fields.
ALTER TABLE DB_WCT.ABSTRACT_TARGET ALTER COLUMN AT_DESC TYPE VARCHAR(4000);
ALTER TABLE DB_WCT.SITE ALTER COLUMN ST_DESC TYPE VARCHAR(4000);

-- Update the User table to separate the send Task vs send Notification
-- by email and configure whether to send notifications for changes to
-- objects and harvest warnings.
ALTER TABLE DB_WCT.WCTUSER ADD COLUMN USR_NOTIFICATIONS_BY_EMAIL BOOL;
ALTER TABLE DB_WCT.WCTUSER ADD COLUMN USR_TASKS_BY_EMAIL BOOL;
ALTER TABLE DB_WCT.WCTUSER ADD COLUMN USR_NOTIFY_ON_GENERAL BOOL;
ALTER TABLE DB_WCT.WCTUSER ADD COLUMN USR_NOTIFY_ON_WARNINGS BOOL;

UPDATE DB_WCT.WCTUSER SET USR_NOTIFICATIONS_BY_EMAIL = USR_NOTIFY_BY_EMAIL;
UPDATE DB_WCT.WCTUSER SET USR_TASKS_BY_EMAIL = USR_NOTIFY_BY_EMAIL;
UPDATE DB_WCT.WCTUSER SET USR_NOTIFY_ON_GENERAL = TRUE;
UPDATE DB_WCT.WCTUSER SET USR_NOTIFY_ON_WARNINGS = TRUE;

ALTER TABLE DB_WCT.WCTUSER DROP COLUMN USR_NOTIFY_BY_EMAIL;

ALTER TABLE DB_WCT.WCTUSER ALTER COLUMN USR_NOTIFICATIONS_BY_EMAIL SET NOT NULL;
ALTER TABLE DB_WCT.WCTUSER ALTER COLUMN USR_TASKS_BY_EMAIL SET NOT NULL;
ALTER TABLE DB_WCT.WCTUSER ALTER COLUMN USR_NOTIFY_ON_GENERAL SET NOT NULL;
ALTER TABLE DB_WCT.WCTUSER ALTER COLUMN USR_NOTIFY_ON_WARNINGS SET NOT NULL;

-- Add a table to hold modification notes from the Prune Tool. These 
-- notes will tell us which resources have been added and removed.
CREATE TABLE DB_WCT.HR_MODIFICATION_NOTE (
  HMN_HR_OID int8 not null, 
  HMN_NOTE varchar(2000), 
  HMN_INDEX int4 not null, 
  primary key (HMN_HR_OID, HMN_INDEX)
);
ALTER TABLE DB_WCT.HR_MODIFICATION_NOTE ADD CONSTRAINT FKA908CCC03E1474AF FOREIGN KEY (HMN_HR_OID) REFERENCES DB_WCT.HARVEST_RESULT; 
GRANT SELECT,INSERT,UPDATE,DELETE ON DB_WCT.HR_MODIFICATION_NOTE TO USR_WCT;


-- Add a "derived from" number to the Harvest Result table. This will enable
-- us to collect together the full list of modifications made to the harvest
-- result from the original harvest.
ALTER TABLE DB_WCT.HARVEST_RESULT ADD COLUMN HR_DERIVED_FROM INT4;

-- Add a Harvest Server field to the target instance to track which harvester
-- this target instance actually ran on. This is used both in the SIP and
-- for the Harvester Status report.
ALTER TABLE DB_WCT.TARGET_INSTANCE ADD COLUMN TI_HARVEST_SERVER VARCHAR(255);


-- Create the elements for storing SIP parts.
CREATE TABLE DB_WCT.SIP_PART_ELEMENT (
  SPE_TARGET_INSTANCE_OID INT8 NOT NULL, 
  SPE_VALUE TEXT, SPE_KEY VARCHAR(255) NOT NULL, 
  PRIMARY KEY (SPE_TARGET_INSTANCE_OID, SPE_KEY));
  
ALTER TABLE DB_WCT.SIP_PART_ELEMENT ADD CONSTRAINT FK4998B1F5F51BBD3F FOREIGN KEY (SPE_TARGET_INSTANCE_OID) REFERENCES DB_WCT.TARGET_INSTANCE;
GRANT SELECT,UPDATE,INSERT,DELETE ON DB_WCT.SIP_PART_ELEMENT TO USR_WCT;

-- Create the elements for storing the original seeds of a target instance.
create table DB_WCT.TARGET_INSTANCE_ORIG_SEED (
  TIOS_TI_OID int8 not null, 
  TIOS_SEED varchar(255)
);
alter table DB_WCT.TARGET_INSTANCE_ORIG_SEED add constraint FKD47ACFF36748402E foreign key (TIOS_TI_OID) references DB_WCT.TARGET_INSTANCE;
GRANT SELECT,UPDATE,INSERT,DELETE ON DB_WCT.TARGET_INSTANCE_ORIG_SEED TO USR_WCT;

-- Update the status code to 200 for all previous harvests. This is not technically
-- correct, but we need a value of some sort.
ALTER TABLE DB_WCT.HARVEST_RESOURCE ADD COLUMN HRC_STATUS_CODE INT4;
UPDATE DB_WCT.HARVEST_RESOURCE SET HRC_STATUS_CODE = 200;

UPDATE DB_WCT.ID_GENERATOR SET IG_TYPE = TRIM(REPLACE( IG_TYPE, chr(10), ''));

COMMIT;

CREATE INDEX IX_HRC_NAME ON DB_WCT.HARVEST_RESOURCE (HRC_NAME);
CREATE INDEX IX_HRC_HARVEST_RESULT_OID ON DB_WCT.HARVEST_RESOURCE (HRC_HARVEST_RESULT_OID);