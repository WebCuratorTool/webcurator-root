

-- Alter the lengths of the description fields.
ALTER TABLE ABSTRACT_TARGET MODIFY AT_DESC VARCHAR2(4000);
ALTER TABLE SITE MODIFY ST_DESC VARCHAR2(4000);

-- Update the User table to separate the send Task vs send Notification
-- by email and configure whether to send notifications for changes to
-- objects and harvest warnings.
ALTER TABLE WCTUSER ADD (USR_NOTIFICATIONS_BY_EMAIL NUMBER(1));
ALTER TABLE WCTUSER ADD (USR_TASKS_BY_EMAIL NUMBER(1));
ALTER TABLE WCTUSER ADD (USR_NOTIFY_ON_GENERAL NUMBER(1));
ALTER TABLE WCTUSER ADD (USR_NOTIFY_ON_WARNINGS NUMBER(1));

UPDATE WCTUSER SET USR_NOTIFICATIONS_BY_EMAIL = USR_NOTIFY_BY_EMAIL;
UPDATE WCTUSER SET USR_TASKS_BY_EMAIL = USR_NOTIFY_BY_EMAIL;
UPDATE WCTUSER SET USR_NOTIFY_ON_GENERAL = 1;
UPDATE WCTUSER SET USR_NOTIFY_ON_WARNINGS = 1;

ALTER TABLE WCTUSER DROP COLUMN USR_NOTIFY_BY_EMAIL;

ALTER TABLE WCTUSER MODIFY (USR_NOTIFICATIONS_BY_EMAIL NOT NULL);
ALTER TABLE WCTUSER MODIFY (USR_TASKS_BY_EMAIL NOT NULL);
ALTER TABLE WCTUSER MODIFY (USR_NOTIFY_ON_GENERAL NOT NULL);
ALTER TABLE WCTUSER MODIFY (USR_NOTIFY_ON_WARNINGS NOT NULL);

-- Add a table to hold modification notes from the Prune Tool. These 
-- notes will tell us which resources have been added and removed.
CREATE TABLE HR_MODIFICATION_NOTE (
  HMN_HR_OID NUMBER(19,0) NOT NULL, 
  HMN_NOTE VARCHAR2(2000), 
  HMN_INDEX NUMBER(10,0) NOT NULL, 
  PRIMARY KEY (HMN_HR_OID, HMN_INDEX)
);
 
ALTER TABLE HR_MODIFICATION_NOTE ADD CONSTRAINT FK6B569C9B3E1474AF FOREIGN KEY (HMN_HR_OID) REFERENCES HARVEST_RESULT;

GRANT SELECT,INSERT,UPDATE,DELETE ON HR_MODIFICATION_NOTE TO USR_WCT;

-- Add a "derived from" number to the Harvest Result table. This will enable
-- us to collect together the full list of modifications made to the harvest
-- result from the original harvest.
ALTER TABLE HARVEST_RESULT ADD (HR_DERIVED_FROM NUMBER(10,0));

-- Add a Harvest Server field to the target instance to track which harvester
-- this target instance actually ran on. This is used both in the SIP and
-- for the Harvester Status report.
ALTER TABLE TARGET_INSTANCE ADD (TI_HARVEST_SERVER VARCHAR(255));


-- Create the elements for storing SIP parts.
CREATE TABLE SIP_PART_ELEMENT (
  SPE_TARGET_INSTANCE_OID NUMBER(19,0) NOT NULL, 
  SPE_VALUE CLOB, 
  SPE_KEY VARCHAR2(255) NOT NULL, 
  PRIMARY KEY (SPE_TARGET_INSTANCE_OID, SPE_KEY)
);

ALTER TABLE SIP_PART_ELEMENT ADD CONSTRAINT FK4998B1F5F51BBD3F FOREIGN KEY (SPE_TARGET_INSTANCE_OID) REFERENCES TARGET_INSTANCE;

GRANT SELECT,UPDATE,INSERT,DELETE ON SIP_PART_ELEMENT TO USR_WCT;

-- Create the elements for storing the original seeds of a target instance.
CREATE TABLE TARGET_INSTANCE_ORIG_SEED (
  TIOS_TI_OID NUMBER(19,0) NOT NULL, 
  TIOS_SEED VARCHAR2(255)
);

ALTER TABLE TARGET_INSTANCE_ORIG_SEED ADD CONSTRAINT FKD47ACFF36748402E FOREIGN KEY (TIOS_TI_OID) REFERENCES TARGET_INSTANCE;

GRANT SELECT,UPDATE,INSERT,DELETE ON TARGET_INSTANCE_ORIG_SEED TO USR_WCT;

-- Update the status code to 200 for all previous harvests. This is not technically
-- correct, but we need a value of some sort.
ALTER TABLE HARVEST_RESOURCE ADD (HRC_STATUS_CODE NUMBER(10));
UPDATE HARVEST_RESOURCE SET HRC_STATUS_CODE = 200;

UPDATE ID_GENERATOR SET IG_TYPE = TRIM(REPLACE(IG_TYPE, CHR(10), NULL));

COMMIT;

CREATE INDEX IX_HRC_NAME ON DB_WCT.HARVEST_RESOURCE (HRC_NAME);
CREATE INDEX IX_HRC_HARVEST_RESULT_OID ON DB_WCT.HARVEST_RESOURCE (HRC_HARVEST_RESULT_OID);